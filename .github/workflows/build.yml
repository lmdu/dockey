name: build

on: [push, pull_request]

jobs:
  build_win:
    name: Build on Windows
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2.4.0

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install requirements
        run: |
          pip install https://github.com/lmdu/pymol-wheel/releases/download/2.6/pymol-2.6.0a0-cp38-cp38-win_amd64.whl
          pip install https://github.com/lmdu/openbabel-wheel/releases/download/3.1/openbabel-3.1.1-cp38-cp38-win_amd64.whl
          pip install git+https://github.com/lmdu/AutoDockTools_py3
          pip install numpy==1.21.4
          pip install psutil==5.9.0
          pip install apsw-wheels==3.36.0.post1
          pip install PySide6==6.2.4
          pip install pyinstaller==4.9
          pip install --no-deps plip==2.2.2

      - name: Build executable
        run: pyinstaller package/build_win.spec

      - name: Package
        run: |
          $lines = Get-Content src/config.py
          $version = $lines[10].Split('"')[1]
          iscc /DMyAppVersion=$version package/build_win_installer.iss

      - uses: actions/upload-artifact@v2
        with:
          name: Dockey-win64
          path: dist/*.exe

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*.exe

  build_ubuntu:
    name: Build on Ubuntu
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2.4.0

      #- name: Install Python
      #  uses: actions/setup-python@v2
      #  with:
      #    python-version: 3.8

      - name: Install requirements
        run: |
          python3 --version
          pip --version
          pip install https://github.com/lmdu/pymol-wheel/releases/download/2.6/pymol-2.6.0a0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
          sudo apt install -y python3-openbabel
          pip install git+https://github.com/lmdu/AutoDockTools_py3
          pip install numpy==1.21.4
          pip install psutil==5.9.0
          pip install apsw-wheels==3.36.0.post1
          pip install PySide6==6.2.4
          pip install pyinstaller==5.0.1
          pip install --no-deps plip==2.2.2

      - name: Build executable
        run: pyinstaller package/build_linux.spec

      - name: Package installer
        run: |
          version=`awk '/^DOCKEY_VERSION/{print $NF}' src/config.py | sed 's/\"//g'`
          cd dist
          tar -czvf Dockey-v${version}-linux.tar.gz Dockey
          chmod a+x ../package/build_linux_desktop.sh
          ../package/build_linux_desktop.sh $version deb

      - uses: actions/upload-artifact@v2
        with:
          name: Dockey-linux
          path: |
            dist/*.deb
            #dist/*.rpm
            dist/*.tar.gz

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.deb
            #dist/*.rpm
            dist/*.tar.gz

  build_mac:
    name: Build on Mac
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2.4.0

      #- name: Install Python
      #  uses: actions/setup-python@v2
      #  with:
      #    python-version: 3.8

      - name: Install requirements
        run: |
          brew install boost
          brew install open-babel
          brew link --overwrite open-babel
          pip3 install https://github.com/lmdu/pymol-wheel/releases/download/2.6/pymol-2.6.0a0-cp39-cp39-macosx_10_9_x86_64.whl
          pip3 install git+https://github.com/lmdu/AutoDockTools_py3
          pip3 install numpy==1.21.4
          pip3 install psutil==5.9.0
          pip3 install apsw-wheels==3.36.0.post1
          pip3 install PySide6==6.2.4
          pip3 install pyinstaller==5.0.1
          pip3 install --no-deps plip==2.2.2
          ls -lh /usr/local/lib/python3.9/site-packages
        env:
          HOMEBREW_NO_INSTALL_CLEANUP: 1
          HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1


      - name: Build executable
        run: pyinstaller package/build_mac.spec

      - name: Package
        run: |
          version=`awk '/^DOCKEY_VERSION/{print $NF}' src/config.py | sed 's/\"//g'`
          npm install --global create-dmg
          cd dist
          create-dmg Dockey.app || true
          mv "Dockey 0.0.0.dmg" Dockey-v${version}-macos.dmg

      - uses: actions/upload-artifact@v2
        with:
          name: Dockey-macos
          path: dist/*.dmg

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*.dmg
