name: build

on: [push, pull_request]

jobs:
  build_win:
    name: Build on Windows
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.x'

      - name: Install requirements
        run: |
          pip install git+https://github.com/lmdu/AutoDockTools_py3
          pip install https://github.com/lmdu/pymol-wheel/releases/download/2.6.0.post4/pymol-2.6.0a0-cp310-cp310-win_amd64.whl
          pip install https://github.com/lmdu/openbabel-wheel/releases/download/3.1.1.post8/openbabel-3.1.1-cp310-cp310-win_amd64.whl
          pip install https://github.com/lmdu/openmm-wheel/releases/download/8.0.0.post1/OpenMM-8.0.0-cp310-cp310-win_amd64.whl
          pip install https://github.com/openmm/pdbfixer/archive/refs/tags/1.9.tar.gz
          pip install -r requirements.txt
          python package\slim_meeko.py

      - name: Build executable
        run: pyinstaller package/build.spec

      - name: Package
        run: |
          $line = Select-String -Path src\config.py -Pattern 'DOCKEY_VERSION =' | Out-String
          $version = $line.Split('"')[1]
          iscc /DMyAppVersion=$version package/build_win_installer.iss
          cd dist
          7z a Dockey-v$version-win64.7z Dockey

      - uses: actions/upload-artifact@v4
        with:
          name: Dockey-win64
          path: |
            dist/*.exe
            dist/*.7z

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.exe
            dist/*.7z


  build_ubuntu:
    name: Build on Ubuntu20.04
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.x'

      - name: Install gcc10
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 10
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 10

      - name: Install Linux requirements
        run: |
          sudo rm /var/cache/debconf/config.dat
          sudo dpkg --configure -a
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt update
          sudo apt upgrade
          sudo apt install -y build-essential checkinstall libegl-dev zlib1g-dev libssl-dev ninja-build autoconf libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxdmcp-dev libxext-dev libxfixes-dev libxi-dev libxinerama-dev libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxrender-dev libxres-dev libxss-dev libxt-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev xtrans-dev libxcb-render0-dev libxcb-render-util0-dev libxkbcommon-x11-0 libxcb-xkb1 libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev xkb-data libxcb-dri3-dev uuid-dev libxcb-util-dev libxcb-cursor-dev libxkbcommon-x11-dev pkg-config

      - name: Install build requirements
        run: |
          pip3 install git+https://github.com/lmdu/AutoDockTools_py3
          pip3 install https://github.com/lmdu/pymol-wheel/releases/download/2.6.0.post4/pymol-2.6.0a0-cp310-cp310-manylinux_2_28_x86_64.whl
          pip3 install https://github.com/lmdu/openbabel-wheel/releases/download/3.1.1.post9/openbabel-3.1.1-cp310-cp310-manylinux_2_28_x86_64.whl
          pip3 install https://github.com/lmdu/openmm-wheel/releases/download/8.0.0.post1/OpenMM-8.0.0-cp310-cp310-manylinux_2_28_x86_64.whl
          pip3 install https://github.com/openmm/pdbfixer/archive/refs/tags/1.9.tar.gz
          pip3 install -r requirements.txt
          python3 package/slim_meeko.py

      - name: Build executable
        run: pyinstaller package/build.spec

      - name: Package installer
        run: |
          version=`awk '/^DOCKEY_VERSION/{print $NF}' src/config.py | sed 's/\"//g'`
          cd dist
          chmod a+x ../package/build_linux_desktop.sh
          ../package/build_linux_desktop.sh $version

      - uses: actions/upload-artifact@v4
        with:
          name: Dockey-ubuntu20.04
          path: |
            dist/*.deb
            dist/*.tar.gz
            dist/*.AppImage

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.deb
            dist/*.tar.gz
            dist/*.AppImage

  build_modern:
    name: Build on Ubuntu22.04
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.x'

      - name: Install gcc12
        run: |
          sudo apt install g++-12 gcc-12 -y
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 12
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 12

      - name: Install Linux requirements
        run: |
          sudo rm /var/cache/debconf/config.dat
          sudo dpkg --configure -a
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt update
          sudo apt upgrade
          sudo apt install -y build-essential checkinstall libegl-dev zlib1g-dev libssl-dev ninja-build autoconf libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxdmcp-dev libxext-dev libxfixes-dev libxi-dev libxinerama-dev libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxrender-dev libxres-dev libxss-dev libxt-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev xtrans-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev xkb-data libxcb-dri3-dev uuid-dev libxcb-util-dev libxkbcommon-x11-dev pkg-config

      - name: Install build requirements
        run: |
          pip3 install git+https://github.com/lmdu/AutoDockTools_py3
          pip3 install https://github.com/lmdu/pymol-wheel/releases/download/2.6.0.post4/pymol-2.6.0a0-cp310-cp310-manylinux_2_28_x86_64.whl
          pip3 install https://github.com/lmdu/openbabel-wheel/releases/download/3.1.1.post8/openbabel-3.1.1-cp310-cp310-manylinux_2_28_x86_64.whl
          pip3 install https://github.com/lmdu/openmm-wheel/releases/download/8.0.0.post1/OpenMM-8.0.0-cp310-cp310-manylinux_2_28_x86_64.whl
          pip3 install https://github.com/openmm/pdbfixer/archive/refs/tags/1.9.tar.gz
          pip3 install -r requirements.txt
          python3 package/slim_meeko.py

      - name: Build executable
        run: pyinstaller package/build.spec

      - name: Package installer
        run: |
          version=`awk '/^DOCKEY_VERSION/{print $NF}' src/config.py | sed 's/\"//g'`
          cd dist
          chmod a+x ../package/build_linux_desktop.sh
          ../package/build_linux_desktop.sh $version

      - uses: actions/upload-artifact@v4
        with:
          name: Dockey-ubuntu22.04
          path: |
            dist/*.deb
            dist/*.tar.gz
            dist/*.AppImage

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.deb
            dist/*.tar.gz
            dist/*.AppImage

  build_mac:
    name: Build on MacOS
    runs-on: macos-12

    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.x'

      - name: Install requirements
        run: |
          pip3 install git+https://github.com/lmdu/AutoDockTools_py3
          pip3 install https://github.com/lmdu/pymol-wheel/releases/download/2.6.0.post4/pymol-2.6.0a0-cp310-cp310-macosx_10_9_x86_64.whl
          pip3 install https://github.com/lmdu/openbabel-wheel/releases/download/3.1.1.post8/openbabel-3.1.1-cp310-cp310-macosx_11_0_x86_64.whl
          pip3 install https://github.com/lmdu/openmm-wheel/releases/download/8.0.0.post1/OpenMM-8.0.0-cp310-cp310-macosx_10_9_x86_64.whl
          pip3 install https://github.com/openmm/pdbfixer/archive/refs/tags/1.9.tar.gz
          pip3 install -r requirements.txt
          python3 package/slim_meeko.py

      - name: Build executable
        run: pyinstaller package/build.spec

      - name: Package
        run: |
          version=`awk '/^DOCKEY_VERSION/{print $NF}' src/config.py | sed 's/\"//g'`
          npm install --global create-dmg
          cd dist
          create-dmg Dockey.app || test -f Dockey\ 0.0.0.dmg
          mv Dockey\ 0.0.0.dmg Dockey-v${version}-macos.dmg
          tar -czvf Dockey-v${version}-macos.tar.gz Dockey.app

      - uses: actions/upload-artifact@v4
        with:
          name: Dockey-macos
          path: |
            dist/*.dmg
            dist/*.tar.gz

      - uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.dmg
            dist/*.tar.gz
