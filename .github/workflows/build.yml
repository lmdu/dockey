name: build

on: [push, pull_request]

jobs:
  build_win:
    name: Build on Windows
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install requirements
        run: |
          pip install wheels/Pmw‑2.0.1‑py3‑none‑any.whl
          pip install wheels/openbabel-3.1.1-cp38-cp38-win_amd64.whl
          pip install wheels/pymol-2.6.0a0-cp38-cp38-win_amd64.whl
          pip install apsw-wheels==3.36.0.post1
          pip install PySide6==6.2.2.1
          pip install pyinstaller==4.7

      - name: Build executable
        run: pyinstaller package/build.spec

      - name: Package
        run: iscc package/build_win_installer.iss

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.exe

  build_linux:
    name: Build on Linux
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install openbabel
        run: |
          sudo apt install libxml2-dev zlib1g-dev libeigen3-dev
          wget https://github.com/openbabel/openbabel/archive/refs/tags/openbabel-3-1-1.tar.gz
          tar xzf openbabel-3-1-1.tar.gz
          cd openbabel-3-1-1
          mkdir build
          cd build
          cmake ..
          make -j2
          sudo make install
          pip install openbabel==3.1.1.1

      - name: Install pymol
        run: |
          sudo apt install build-essential libgl1-mesa-dev libglew-dev libpng-dev libfreetype6-dev
          sudo apt install libmsgpack-dev libxml2-dev libglm-dev libnetcdf-dev
          git clone https://github.com/schrodinger/pymol-open-source.git
          git clone https://github.com/rcsb/mmtf-cpp.git
          mv mmtf-cpp/include/mmtf* pymol-open-source/include/
          cd pymol-open-source
          python setup.py install

      - name: Install requirements
        run: |
          pip install apsw-wheels==3.36.0.post1
          pip install PySide6==6.2.2.1
          pip install pyinstaller==4.7

      - name: Build executable
        run: pyinstaller package/build.spec

      - name: Package installer
        run: |
          version=`awk '/^VERSION/{print $NF}' src/config.py | sed 's/\"//g'`
          cd dist
          tar -czvf Dockey-v${version}-linux.tar.gz Dockey
          chmod a+x ../package/build_linux_desktop.sh
          ../package/build_linux_desktop.sh $version

      - uses: actions/upload-artifact@v2
        with:
          path: |
            dist/*.deb
            dist/*.rpm

  build_mac:
    name: Build on Mac
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install openbabel
        run: |
          brew install libxml2 eigen zlib
          wget https://github.com/openbabel/openbabel/archive/refs/tags/openbabel-3-1-1.tar.gz
          tar xzf openbabel-3-1-1.tar.gz
          cd openbabel-3-1-1
          mkdir build
          cd build
          cmake ..
          make -j2
          sudo make install
          pip install openbabel==3.1.1.1

      - name: Install pymol
        run: |
          brew install glfw glew libpng freetype libxml2 msgpack glm netcdf
          git clone https://github.com/schrodinger/pymol-open-source.git
          git clone https://github.com/rcsb/mmtf-cpp.git
          mv mmtf-cpp/include/mmtf* pymol-open-source/include/
          cd pymol-open-source
          python setup.py install

      - name: Install requirements
        run: |
          pip install apsw-wheels==3.36.0.post1
          pip install PySide6==6.2.2.1
          pip install pyinstaller==4.7

      - name: Build executable
        run: pyinstaller package/build.spec

      - name: Package
        run: |
          version=`awk '/^VERSION/{print $NF}' src/config.py | sed 's/\"//g'`
          cd dist
          npm install --global create-dmg
          create-dmg Dockey.app

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.dmg


