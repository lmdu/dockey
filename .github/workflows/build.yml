name: build

on: [push, pull_request]

jobs:
  build_win:
    name: Build on Windows
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2.4.0

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install requirements
        run: |
          pip install https://github.com/lmdu/pymol-wheel/releases/download/2.6.0a0/pymol-2.6.0a0-cp38-cp38-win_amd64.whl
          pip install https://github.com/lmdu/openbabel-wheel/releases/download/3.1.1/openbabel-3.1.1-cp38-cp38-win_amd64.whl
          pip install psutil==5.9.0
          pip install apsw-wheels==3.36.0.post1
          pip install PySide6==6.2.2.1
          pip install pyinstaller==4.7

      - name: Build executable
        run: pyinstaller package/build_win.spec

      - name: Package
        run: |
          $lines = Get-Content src/config.py
          $version = $lines[9].Split('"')[1]
          iscc /DMyAppVersion=$version package/build_win_installer.iss

      - uses: actions/upload-artifact@v2
        with:
          name: Dockey-win64
          path: dist/*.exe

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*.exe

  build_ubuntu:
    name: Build on Ubuntu
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2.4.0

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install requirements
        run: |
          pip install https://github.com/lmdu/pymol-wheel/releases/download/2.6.0a0/pymol-2.6.0a0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
          pip install https://github.com/lmdu/openbabel-wheel/releases/download/3.1.1/openbabel-3.1.1.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
          pip install psutil==5.9.0
          pip install apsw-wheels==3.36.0.post1
          pip install PySide6==6.2.2.1
          pip install pyinstaller==4.7

      - name: Build executable
        run: pyinstaller package/build_linux.spec

      - name: Package installer
        run: |
          version=`awk '/^DOCKEY_VERSION/{print $NF}' src/config.py | sed 's/\"//g'`
          cd dist
          tar -czvf Dockey-v${version}-linux.tar.gz Dockey
          chmod a+x ../package/build_linux_desktop.sh
          ../package/build_linux_desktop.sh $version deb

      - uses: actions/upload-artifact@v2
        with:
          name: Dockey-linux
          path: |
            dist/*.deb
            dist/*.tar.gz

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.deb
            dist/*.tar.gz

  build_fedora:
    name: Build on Fedora
    runs-on: ubuntu-20.04
    container:
      image: fedora:latest

    steps:
      - uses: actions/checkout@v2.4.0

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - run: python -m pip install -U pip

      - name: Install requirements
        run: |
          python -m pip install https://github.com/lmdu/pymol-wheel/releases/download/2.6.0a0/pymol-2.6.0a0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
          python -m pip install https://github.com/lmdu/openbabel-wheel/releases/download/3.1.1/openbabel-3.1.1.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
          python -m pip install psutil==5.9.0
          python -m pip install apsw-wheels==3.36.0.post1
          python -m pip install PySide6==6.2.2.1
          python -m pip install pyinstaller==4.7

      - name: Build executable
        run: python -m pyinstaller package/build_linux.spec

      - name: Package installer
        run: |
          version=`awk '/^DOCKEY_VERSION/{print $NF}' src/config.py | sed 's/\"//g'`
          cd dist
          tar -czvf Dockey-v${version}-linux.tar.gz Dockey
          chmod a+x ../package/build_linux_desktop.sh
          ../package/build_linux_desktop.sh $version rpm

      - uses: actions/upload-artifact@v2
        with:
          name: Dockey-linux
          path: |
            dist/*.rpm
            dist/*.tar.gz

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.rpm
            dist/*.tar.gz

  build_mac:
    name: Build on Mac
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2.4.0

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install openbabel
        run: |
          cmake --version
          wget https://github.com/openbabel/openbabel/archive/refs/tags/openbabel-3-1-1.tar.gz
          tar xzf openbabel-3-1-1.tar.gz
          cd openbabel-openbabel-3-1-1
          mkdir build
          cd build
          cmake .. -DRUN_SWIG=ON -DPYTHON_BINDINGS=ON -DPYTHON_EXECUTABLE=/Users/runner/hostedtoolcache/Python/3.8.12/x64/bin/python
          make -j2
          make install
          cd ../../
          #pip install openbabel==3.1.1.1

      - name: Install requirements
        run: |
          pip install https://github.com/lmdu/pymol-wheel/releases/download/2.6.0a0/pymol-2.6.0a0-cp38-cp38-macosx_10_9_x86_64.whl
          #pip install https://github.com/lmdu/openbabel-wheel/releases/download/3.1.1/openbabel-3.1.1.1-cp38-cp38-macosx_10_9_x86_64.whl
          pip install psutil==5.9.0
          pip install apsw-wheels==3.36.0.post1
          pip install PySide6==6.2.2.1
          pip install pyinstaller==4.7

      - name: Build executable
        run: pyinstaller package/build_mac.spec

      - name: Package
        run: |
          version=`awk '/^DOCKEY_VERSION/{print $NF}' src/config.py | sed 's/\"//g'`
          npm install --global create-dmg
          cd dist
          create-dmg Dockey.app || true
          mv "Dockey 0.0.0.dmg" Dockey-v${version}-macos.dmg

      - uses: actions/upload-artifact@v2
        with:
          name: Dockey-macos
          path: dist/*.dmg

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*.dmg
